--version: {version}

@設定
--file:
--track0:オフセット,-99999.9,99999.9,0,0.1
--track1:キャッシュ,0,1,1,1
--check0:透かし,1

if obj.track1 ~= 1 or not PED_DATA or PED_DATA.file ~= file then
  debug_print("[pjsekai-overlay] Loading ped data in " .. file)
  local time = os.clock()
  PED_DATA = {}
  PED_DATA.frames = {}
  PED_DATA.path = nil
  PED_DATA.version = nil
  PED_DATA.version_status = "none"
  PED_DATA.enUI = false
  PED_DATA.file = file
  PED_DATA.cache_number = obj.track1
  PED_DATA.current = nil
  local fp = io.open(file, "r")
  if fp then
    PED_DATA.loaded = "invalid"
    for line in fp:lines() do
      local header, data = string.match(line, "([a-z]+)|(.+)")
      if header ~= nil then
        PED_DATA.loaded = "ok"
        if header == "s" then
          local nmatch = {string.match(data, "([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([abcds]+):([%-0-9.]+)")}
          PED_DATA.frames[#PED_DATA.frames + 1] = {
            time = tonumber(nmatch[1]),
            score2 = tonumber(nmatch[2]),
            score = tonumber(nmatch[3]),
            offset2 = tonumber(nmatch[4]),
            offset = tonumber(nmatch[5]),
            widthP1 = tonumber(nmatch[6]),
            widthP2 = tonumber(nmatch[7]),
            widthP3 = tonumber(nmatch[8]),
            widthP4 = tonumber(nmatch[9]),
            widthP5 = tonumber(nmatch[10]),
            rank = nmatch[11],
            combo = tonumber(nmatch[12])
          }
        elseif header == "p" then -- Pass
          PED_DATA.path = data
        elseif header == "e" then -- English UI
          PED_DATA.enUI = data == "true"
        elseif header == "v" then -- Version
          PED_DATA.version = data
        end
      end
    end
    debug_print("[pjsekai-overlay] Successfully loaded ped data")
    debug_print("[pjsekai-overlay] Time: " .. os.clock() - time)
    debug_print("[pjsekai-overlay] Version: " .. PED_DATA.version)
    debug_print("[pjsekai-overlay] # of frames: " .. #PED_DATA.frames)
    fp:close()
  else
    PED_DATA.loaded = "not_found"
    debug_print("[pjsekai-overlay] Couldn't find ped data file")
  end
end
if PED_DATA.version == "{version}" or "{version}" == "0.0.0" or "{version}" == "{ver".."sion}" then
  OFFSET = obj.track0
  PED_DATA.current = {
    time = 0,
    score2 = 0,
    score = 0,
    offset2 = 0,
    offset = 0,
    widthP1 = 0,
    widthP2 = 0,
    widthP3 = 0,
    widthP4 = 0,
    widthP5 = 0,
    rank = "d",
    combo = 0,
  }
  for i = #PED_DATA.frames, 1, -1 do
    local score = PED_DATA.frames[i]
    if (score.time * obj.framerate) < (obj.frame - OFFSET) then
      PED_DATA.current = score
      break
    end
  end
  PED_DATA.version_status = "ok"
else
  obj.setfont("メイリオ", 32)
  if PED_DATA.loaded == "not_found" then
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "pedファイルが見付かりません！"
    )
  elseif PED_DATA.loaded == "invalid" then
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "pedファイルを読み取れません！"
    )
  elseif PED_DATA.version == nil then
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "pedファイルのバージョンが設定されていません！"
    )
  else
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "pedファイルとのバージョンが違います！\n"..
      "[.obj: {version}, .ped: "..PED_DATA.version.."]"
    )
  end
  obj.draw()
  PED_DATA.version_status = "ng"
end
if obj.check0 and PED_DATA.version_status == "ok" then
  obj.setfont("FOT-ロダンNTLG Pro EB", 100)
  obj.load(
      "text",
      "<s100,FOT-ロダンNTLG Pro EB>※TootieJinの「pjsekai-overlay-MULTI」を使用\n"..
      "※Made with「pjsekai-overlay-MULTI」by TootieJin\n"..
      "............................................................................<s>"
  )
  obj.draw(-(obj.screen_w - ((1920 - obj.screen_w) / (16/9))) / 3.06, (obj.screen_h - ((1080 - obj.screen_h) / (16/9))) / 2.1, 0, 0.24, 0.5)
end
----------------------------------------------------------------
@設定-マルチ
--file:

if PED_DATA.cache_number ~= 1 or not PED_MULTIDATA or PED_MULTIDATA.file ~= file then
  debug_print("[pjsekai-overlay] Loading ped-multi data in " .. file)
  local time = os.clock()
  PED_MULTIDATA = {}
  PED_MULTIDATA.frames = {}
  PED_MULTIDATA.path = nil
  PED_MULTIDATA.pos = nil
  PED_MULTIDATA.version = nil
  PED_MULTIDATA.version_status = "none"
  PED_MULTIDATA.file = file
  PED_MULTIDATA.cache_number = PED_DATA.cache_number
  PED_MULTIDATA.current = nil
  local fp = io.open(file, "r")
  if fp then
    PED_MULTIDATA.loaded = "invalid"
    for line in fp:lines() do
      local header, data = string.match(line, "([a-z]+)|(.+)")
      if header ~= nil then
        PED_MULTIDATA.loaded = "ok"
        if header == "s" then
          local nmatch = {string.match(data, "([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+):([%-0-9.]+)")}
          PED_MULTIDATA.frames[#PED_MULTIDATA.frames + 1] = {
            time = tonumber(nmatch[1]),
            score = tonumber(nmatch[2]),
            combo1 = tonumber(nmatch[3]),
            combo2 = tonumber(nmatch[4]),
            combo3 = tonumber(nmatch[5]),
            combo4 = tonumber(nmatch[6]),
            combo5 = tonumber(nmatch[7]),
          }
        elseif header == "p" then -- Pass
          PED_MULTIDATA.path = data
        elseif header == "l" then -- Player Position
          PED_MULTIDATA.pos = data
        elseif header == "v" then -- Version
          PED_MULTIDATA.version = data
        end
      end
    end
    debug_print("[pjsekai-overlay] Successfully loaded ped-multi data")
    debug_print("[pjsekai-overlay] Time: " .. os.clock() - time)
    debug_print("[pjsekai-overlay] Version: " .. PED_MULTIDATA.version)
    debug_print("[pjsekai-overlay] # of frames: " .. #PED_MULTIDATA.frames)
    fp:close()
  else
    PED_MULTIDATA.loaded = "not_found"
    debug_print("[pjsekai-overlay] Couldn't find ped-multi data file")
  end
end
if PED_MULTIDATA.version == "{version}" or "{version}" == "0.0.0" or "{version}" == "{ver".."sion}" then
  PED_MULTIDATA.current = {
    time = 0,
    score = 0,
    combo1 = 0,
    combo2 = 0,
    combo3 = 0,
    combo4 = 0,
    combo5 = 0,
  }
  for i = #PED_MULTIDATA.frames, 1, -1 do
    local score = PED_MULTIDATA.frames[i]
    if (score.time * obj.framerate) < (obj.frame - OFFSET) then
      PED_MULTIDATA.current = score
      break
    end
  end
  PED_MULTIDATA.version_status = "ok"
else
  obj.setfont("メイリオ", 32)
  if PED_MULTIDATA.loaded == "not_found" then
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "ped-multiファイルが見付かりません！"
    )
  elseif PED_MULTIDATA.loaded == "invalid" then
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "ped-multiファイルを読み取れません！"
    )
  elseif PED_MULTIDATA.version == nil then
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "ped-multiファイルのバージョンが設定されていません！"
    )
  else
    obj.load(
      "text",
      "<s32,メイリオ,B>(! ERROR !)\n<s>"..
      "ped-multiファイルとのバージョンが違います！\n"..
      "[.obj: {version}, .ped: "..PED_MULTIDATA.version.."]"
    )
  end
  obj.draw()
  PED_MULTIDATA.version_status = "ng"
end
----------------------------------------------------------------
@プレイヤー1
if PED_MULTIDATA and PED_MULTIDATA.version_status == "ok" then
  local progress = (obj.frame - OFFSET) - (PED_MULTIDATA.current.time * obj.framerate)
  obj.setoption("drawtarget", "tempbuffer", obj.screen_w / 4, 600)
  obj.load("image", PED_MULTIDATA.path.."/players/frame1.png")
  obj.draw(0, -122, 0, 1.7)
  obj.load("image", PED_MULTIDATA.path.."/players/player1.png")
  obj.draw(0, -122, 0, 1.19)

  if PED_MULTIDATA.current.combo1 == 0 and progress >= 0 and progress < 20 then
    obj.effect("振動", "X", -(progress/2) + 10, "Y", -(progress/2) + 10, "Z", 0, "周期", 1, "ランダムに強さを変える", 1, "複雑に振動", 1)
  end
  if PED_MULTIDATA.pos == "1" then
    obj.load("image", PED_MULTIDATA.path.."/players/you.png")
    obj.draw(0, 0, 0, 2.1)
  else
    if PED_MULTIDATA.current.combo1 > 0 then
      obj.load("image", PED_MULTIDATA.path.."/combo/nt.png")
      obj.draw(0, 50, 0, 0.7)

      local combo_str
      combo_str = tostring(PED_MULTIDATA.current.combo1)

      for i = 1, #combo_str do
        local digit = combo_str:sub(i, i)
        local shift = -(#combo_str / 2) + i - 0.5
        local shift_fax = 0

        if progress > 8 then
          shift_fax = 1
        else
          shift_fax = (progress / 8) * 0.5 + 0.5
        end

        obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
        obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax)
      end
      obj.setoption("blend", 1)
      if progress < 14 then
        for i = 1, #combo_str do
          local digit = combo_str:sub(i, i)
          local shift = -(#combo_str / 2) + i - 0.5
          local shift_fax = (progress / 8) * 0.5 + 0.5
          local alpha = (progress / 14) * -1 + 1

          obj.load("image", PED_MULTIDATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, 0)
          obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, alpha)
        end
      end
      obj.setoption("blend", 0)
    end
  end
  obj.setoption("antialias", 1)
  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@プレイヤー2
if PED_MULTIDATA and PED_MULTIDATA.version_status == "ok" then
  local progress = (obj.frame - OFFSET) - (PED_MULTIDATA.current.time * obj.framerate)
  obj.setoption("drawtarget", "tempbuffer", obj.screen_w / 4, 600)
  obj.load("image", PED_MULTIDATA.path.."/players/frame2.png")
  obj.draw(0, -122, 0, 1.7)
  obj.load("image", PED_MULTIDATA.path.."/players/player2.png")
  obj.draw(0, -122, 0, 1.19)

  if PED_MULTIDATA.current.combo2 == 0 and progress >= 0 and progress < 20 then
    obj.effect("振動", "X", -(progress/2) + 10, "Y", -(progress/2) + 10, "Z", 0, "周期", 1, "ランダムに強さを変える", 1, "複雑に振動", 1)
  end
  if PED_MULTIDATA.pos == "2" then
    obj.load("image", PED_MULTIDATA.path.."/players/you.png")
    obj.draw(0, 0, 0, 2.1)
  else
    if PED_MULTIDATA.current.combo2 > 0 then
      obj.load("image", PED_MULTIDATA.path.."/combo/nt.png")
      obj.draw(0, 50, 0, 0.7)

      local combo_str
      combo_str = tostring(PED_MULTIDATA.current.combo2)

      for i = 1, #combo_str do
        local digit = combo_str:sub(i, i)
        local shift = -(#combo_str / 2) + i - 0.5
        local shift_fax = 0

        if progress > 8 then
          shift_fax = 1
        else
          shift_fax = (progress / 8) * 0.5 + 0.5
        end

        obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
        obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax)
      end
      obj.setoption("blend", 1)
      if progress < 14 then
        for i = 1, #combo_str do
          local digit = combo_str:sub(i, i)
          local shift = -(#combo_str / 2) + i - 0.5
          local shift_fax = (progress / 8) * 0.5 + 0.5
          local alpha = (progress / 14) * -1 + 1

          obj.load("image", PED_MULTIDATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, 0)
          obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, alpha)
        end
      end
      obj.setoption("blend", 0)
    end
  end
  obj.setoption("antialias", 1)
  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@プレイヤー3
if PED_MULTIDATA and PED_MULTIDATA.version_status == "ok" then
  local progress = (obj.frame - OFFSET) - (PED_MULTIDATA.current.time * obj.framerate)
  obj.setoption("drawtarget", "tempbuffer", obj.screen_w / 4, 600)
  obj.load("image", PED_MULTIDATA.path.."/players/frame3.png")
  obj.draw(0, -122, 0, 1.7)
  obj.load("image", PED_MULTIDATA.path.."/players/player3.png")
  obj.draw(0, -122, 0, 1.19)

  if PED_MULTIDATA.current.combo3 == 0 and progress >= 0 and progress < 20 then
    obj.effect("振動", "X", -(progress/2) + 10, "Y", -(progress/2) + 10, "Z", 0, "周期", 1, "ランダムに強さを変える", 1, "複雑に振動", 1)
  end
  if PED_MULTIDATA.pos == "3" then
    obj.load("image", PED_MULTIDATA.path.."/players/you.png")
    obj.draw(0, 0, 0, 2.1)
  else
    if PED_MULTIDATA.current.combo3 > 0 then
      obj.load("image", PED_MULTIDATA.path.."/combo/nt.png")
      obj.draw(0, 50, 0, 0.7)

      local combo_str
      combo_str = tostring(PED_MULTIDATA.current.combo3)

      for i = 1, #combo_str do
        local digit = combo_str:sub(i, i)
        local shift = -(#combo_str / 2) + i - 0.5
        local shift_fax = 0

        if progress > 8 then
          shift_fax = 1
        else
          shift_fax = (progress / 8) * 0.5 + 0.5
        end

        obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
        obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax)
      end
      obj.setoption("blend", 1)
      if progress < 14 then
        for i = 1, #combo_str do
          local digit = combo_str:sub(i, i)
          local shift = -(#combo_str / 2) + i - 0.5
          local shift_fax = (progress / 8) * 0.5 + 0.5
          local alpha = (progress / 14) * -1 + 1

          obj.load("image", PED_MULTIDATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, 0)
          obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, alpha)
        end
      end
      obj.setoption("blend", 0)
    end
  end
  obj.setoption("antialias", 1)
  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@プレイヤー4
if PED_MULTIDATA and PED_MULTIDATA.version_status == "ok" then
  local progress = (obj.frame - OFFSET) - (PED_MULTIDATA.current.time * obj.framerate)
  obj.setoption("drawtarget", "tempbuffer", obj.screen_w / 4, 600)
  obj.load("image", PED_MULTIDATA.path.."/players/frame4.png")
  obj.draw(0, -122, 0, 1.7)
  obj.load("image", PED_MULTIDATA.path.."/players/player4.png")
  obj.draw(0, -122, 0, 1.19)

  if PED_MULTIDATA.current.combo4 == 0 and progress >= 0 and progress < 20 then
    obj.effect("振動", "X", -(progress/2) + 10, "Y", -(progress/2) + 10, "Z", 0, "周期", 1, "ランダムに強さを変える", 1, "複雑に振動", 1)
  end
  if PED_MULTIDATA.pos == "4" then
    obj.load("image", PED_MULTIDATA.path.."/players/you.png")
    obj.draw(0, 0, 0, 2.1)
  else
    if PED_MULTIDATA.current.combo4 > 0 then
      obj.load("image", PED_MULTIDATA.path.."/combo/nt.png")
      obj.draw(0, 50, 0, 0.7)

      local combo_str
      combo_str = tostring(PED_MULTIDATA.current.combo4)

      for i = 1, #combo_str do
        local digit = combo_str:sub(i, i)
        local shift = -(#combo_str / 2) + i - 0.5
        local shift_fax = 0

        if progress > 8 then
          shift_fax = 1
        else
          shift_fax = (progress / 8) * 0.5 + 0.5
        end

        obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
        obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax)
      end
      obj.setoption("blend", 1)
      if progress < 14 then
        for i = 1, #combo_str do
          local digit = combo_str:sub(i, i)
          local shift = -(#combo_str / 2) + i - 0.5
          local shift_fax = (progress / 8) * 0.5 + 0.5
          local alpha = (progress / 14) * -1 + 1

          obj.load("image", PED_MULTIDATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, 0)
          obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, alpha)
        end
      end
      obj.setoption("blend", 0)
    end
  end
  obj.setoption("antialias", 1)
  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@プレイヤー5
if PED_MULTIDATA and PED_MULTIDATA.version_status == "ok" then
  local progress = (obj.frame - OFFSET) - (PED_MULTIDATA.current.time * obj.framerate)
  obj.setoption("drawtarget", "tempbuffer", obj.screen_w / 4, 600)
  obj.load("image", PED_MULTIDATA.path.."/players/frame5.png")
  obj.draw(0, -122, 0, 1.7)
  obj.load("image", PED_MULTIDATA.path.."/players/player5.png")
  obj.draw(0, -122, 0, 1.19)

  if PED_MULTIDATA.current.combo5 == 0 and progress >= 0 and progress < 20 then
    obj.effect("振動", "X", -(progress/2) + 10, "Y", -(progress/2) + 10, "Z", 0, "周期", 1, "ランダムに強さを変える", 1, "複雑に振動", 1)
  end
  if PED_MULTIDATA.pos == "5" then
    obj.load("image", PED_MULTIDATA.path.."/players/you.png")
    obj.draw(0, 0, 0, 2.1)
  else
    if PED_MULTIDATA.current.combo5 > 0 then
      obj.load("image", PED_MULTIDATA.path.."/combo/nt.png")
      obj.draw(0, 50, 0, 0.7)

      local combo_str
      combo_str = tostring(PED_MULTIDATA.current.combo5)

      for i = 1, #combo_str do
        local digit = combo_str:sub(i, i)
        local shift = -(#combo_str / 2) + i - 0.5
        local shift_fax = 0

        if progress > 8 then
          shift_fax = 1
        else
          shift_fax = (progress / 8) * 0.5 + 0.5
        end

        obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
        obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax)
      end
      obj.setoption("blend", 1)
      if progress < 14 then
        for i = 1, #combo_str do
          local digit = combo_str:sub(i, i)
          local shift = -(#combo_str / 2) + i - 0.5
          local shift_fax = (progress / 8) * 0.5 + 0.5
          local alpha = (progress / 14) * -1 + 1

          obj.load("image", PED_MULTIDATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, 0)
          obj.load("image", PED_MULTIDATA.path.."/combo/n"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
          obj.draw(shift * 36 * shift_fax, 0, 0, 0.35 * shift_fax, alpha)
        end
      end
      obj.setoption("blend", 0)
    end
  end
  obj.setoption("antialias", 1)
  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@スコア5
if PED_DATA and PED_DATA.version_status == "ok" then
  -- -- bars
  obj.setoption("drawtarget", "tempbuffer", 532, 24)
  obj.load("image", PED_DATA.path.."/score/bar5.png")
  obj.draw(0, 0, 0, 1)
  obj.setoption("blend", "alpha_sub")
  obj.load("figure", "背景")
  obj.drawpoly(
    532 * (PED_DATA.current.widthP5 - 0.5), -12, 0,
    532, -12, 0,
    532, 12, 0,
    532 * (PED_DATA.current.widthP5 - 0.5), 12, 0
  )
  obj.copybuffer("cache:score_bar", "tmp")

  obj.setoption("drawtarget", "tempbuffer", 99999, 95)
  obj.setoption("blend", 0)
  obj.load("image", PED_DATA.path.."/score/bg.png")
  obj.draw(0, 0, 0, 0.9758)

  -- -- 79, 35 / 532, 24
  obj.copybuffer("obj", "cache:score_bar")
  obj.draw(33.25, -3, 0, 0.671)

  if PED_DATA.enUI then
    obj.load("image", PED_DATA.path.."/score/rank/txt/en/"..PED_DATA.current.rank..".png")
    obj.draw(-187, 35, 0, 0.33)
  else
    obj.load("image", PED_DATA.path.."/score/rank/txt/jp/"..PED_DATA.current.rank..".png")
    obj.draw(-187, 35, 0, 0.34)
  end

  if PED_DATA.current.score2 ~= 0 or PED_DATA.current.score ~= 0 then
    obj.load("image", PED_DATA.path.."/score/rank/chr/"..PED_DATA.current.rank..".png")
    obj.draw(-188, -6, 0, 0.22)
  end

  -- -127, 27, +22
  local score_str = ""
  local score_str2 = ""
  if math.floor(math.abs(PED_DATA.current.score2)) > 0 then
    score_str = string.format("%17.0f", PED_DATA.current.score):gsub(" ", "0")
    score_str2 = string.format("%.0f", PED_DATA.current.score2)
  else
    score_str = string.format("%8.0f", PED_DATA.current.score):gsub(" ", "n")
  end

  if PED_DATA.current.score < 0 then
    score_str = "-" .. string.format("%7.0f", math.abs(PED_DATA.current.score)):gsub(" ", "n")
  end

  local score_len = string.len(score_str)
  local score_len2 = string.len(score_str2)

  for c = 1, score_len2 do
    local digit = score_str2:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/s"..digit..".png")

    obj.draw(-127 + 22 * (c - 1), 26, 0, 0.65)
  end
  for c = 1, score_len2 do
    local digit = score_str2:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/"..digit..".png")

    obj.draw(-127 + 22 * (c - 1), 26, 0, 0.65)
  end
  for c = 1, score_len2 do
    local digit = score_str2:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/s"..digit..".png")

    obj.draw(-127 + 22 * (c - 1), 26, 0, 0.65)
  end
  for c = 1, score_len2 do
    local digit = score_str2:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/"..digit..".png")

    obj.draw(-127 + 22 * (c - 1), 26, 0, 0.65)
  end

  for c = 1, score_len2 + score_len do
    local digit = score_str:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/s"..digit..".png")

    obj.draw(-127 + 22 * (c - 1 + score_len2), 26, 0, 0.65)
  end
  for c = 1, score_len2 + score_len do
    local digit = score_str:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/"..digit..".png")

    obj.draw(-127 + 22 * (c - 1 + score_len2), 26, 0, 0.65)
  end
  for c = 1, score_len2 + score_len do
    local digit = score_str:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/s"..digit..".png")

    obj.draw(-127 + 22 * (c - 1 + score_len2), 26, 0, 0.65)
  end
  for c = 1, score_len2 + score_len do
    local digit = score_str:sub(c, c)
    obj.load("image", PED_DATA.path.."/score/digit/"..digit..".png")

    obj.draw(-127 + 22 * (c - 1 + score_len2), 26, 0, 0.65)
  end

  local progress_frame = ((obj.frame - OFFSET) - (PED_DATA.current.time * obj.framerate))
  if (PED_DATA.current.offset ~= 0 or PED_DATA.current.offset2 ~= 0) and progress_frame <= 31 then
    local progress = (progress_frame / 12)

    local diff = ""
    local diff2 = ""
    if math.floor(math.abs(PED_DATA.current.offset2)) > 0 then
      diff = string.format("%17.0f", PED_DATA.current.offset):gsub(" ", "0")
      diff2 = string.format("%.0f", PED_DATA.current.offset2):gsub(" ", "0")
    else
      diff = string.format("%.0f", PED_DATA.current.offset)
    end

    local diff_len = string.len(diff)
    local diff_len2 = string.len(diff2)

    if progress > 1 then
      progress = 1
    end

    local diff_x = 47 * (1 - (0.9 ^ (progress * 12))) + 22 * (score_len + score_len2 - 8)
    local diff_y = 34
    local diff_alpha = 1.3 * (1 - (0.9 ^ (progress * 12)))
    local c_minus = 0

    if PED_DATA.current.offset >= 0 and PED_DATA.current.offset2 >= 0 then
      obj.load("image", PED_DATA.path.."/score/digit/splus.png")
      obj.draw(26.25 + diff_x, diff_y, 0, 0.42, diff_alpha)
      obj.load("image", PED_DATA.path.."/score/digit/plus.png")
      obj.draw(26.25 + diff_x, diff_y, 0, 0.42, diff_alpha)
    else
      c_minus = 1
    end

    for c = 1, diff_len do
      local digit = diff2:sub(c, c)
      obj.load("image", PED_DATA.path.."/score/digit/s"..digit..".png")

      obj.draw(26.25 + 13.65 * (c - c_minus) + diff_x, diff_y, 0, 0.42, diff_alpha)
    end
    for c = 1, diff_len do
      local digit = diff2:sub(c, c)
      obj.load("image", PED_DATA.path.."/score/digit/"..digit..".png")

      obj.draw(26.25 + 13.65 * (c - c_minus) + diff_x, diff_y, 0, 0.42, diff_alpha)
    end
    for c = 1, diff_len2 + diff_len do
      local digit = diff:sub(c, c)
      obj.load("image", PED_DATA.path.."/score/digit/s"..digit..".png")

      obj.draw(26.25 + 13.65 * (c - c_minus + diff_len2) + diff_x, diff_y, 0, 0.42, diff_alpha)
    end
    for c = 1, diff_len2 + diff_len do
      local digit = diff:sub(c, c)
      obj.load("image", PED_DATA.path.."/score/digit/"..digit..".png")

      obj.draw(26.25 + 13.65 * (c - c_minus + diff_len2) + diff_x, diff_y, 0, 0.42, diff_alpha)
    end
  end
  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@スコア4
if PED_DATA and PED_DATA.version_status == "ok" then
  -- -- bars
  obj.setoption("drawtarget", "tempbuffer", 532, 24)
  obj.load("image", PED_DATA.path.."/score/bar4.png")
  obj.draw(0, 0, 0, 1)
  obj.setoption("blend", "alpha_sub")
  obj.load("figure", "背景")
  obj.drawpoly(
    532 * (PED_DATA.current.widthP4 - 0.5), -12, 0,
    532, -12, 0,
    532, 12, 0,
    532 * (PED_DATA.current.widthP4 - 0.5), 12, 0
  )
  obj.copybuffer("cache:score_bar", "tmp")

  obj.setoption("drawtarget", "tempbuffer", 99999, 95)
  obj.setoption("blend", 0)
  obj.load("image", PED_DATA.path.."/score/bg.png")
  obj.draw(0, 0, 0, 0.9758, 0)

  -- -- 79, 35 / 532, 24
  obj.copybuffer("obj", "cache:score_bar")
  obj.draw(33.25, -3, 0, 0.671)

  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@スコア3
if PED_DATA and PED_DATA.version_status == "ok" then
  -- -- bars
  obj.setoption("drawtarget", "tempbuffer", 532, 24)
  obj.load("image", PED_DATA.path.."/score/bar3.png")
  obj.draw(0, 0, 0, 1)
  obj.setoption("blend", "alpha_sub")
  obj.load("figure", "背景")
  obj.drawpoly(
    532 * (PED_DATA.current.widthP3 - 0.5), -12, 0,
    532, -12, 0,
    532, 12, 0,
    532 * (PED_DATA.current.widthP3 - 0.5), 12, 0
  )
  obj.copybuffer("cache:score_bar", "tmp")

  obj.setoption("drawtarget", "tempbuffer", 99999, 95)
  obj.setoption("blend", 0)
  obj.load("image", PED_DATA.path.."/score/bg.png")
  obj.draw(0, 0, 0, 0.9758, 0)

  -- -- 79, 35 / 532, 24
  obj.copybuffer("obj", "cache:score_bar")
  obj.draw(33.25, -3, 0, 0.671)

  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@スコア2
if PED_DATA and PED_DATA.version_status == "ok" then
  -- -- bars
  obj.setoption("drawtarget", "tempbuffer", 532, 24)
  obj.load("image", PED_DATA.path.."/score/bar2.png")
  obj.draw(0, 0, 0, 1)
  obj.setoption("blend", "alpha_sub")
  obj.load("figure", "背景")
  obj.drawpoly(
    532 * (PED_DATA.current.widthP2 - 0.5), -12, 0,
    532, -12, 0,
    532, 12, 0,
    532 * (PED_DATA.current.widthP2 - 0.5), 12, 0
  )
  obj.copybuffer("cache:score_bar", "tmp")

  obj.setoption("drawtarget", "tempbuffer", 99999, 95)
  obj.setoption("blend", 0)
  obj.load("image", PED_DATA.path.."/score/bg.png")
  obj.draw(0, 0, 0, 0.9758, 0)

  -- -- 79, 35 / 532, 24
  obj.copybuffer("obj", "cache:score_bar")
  obj.draw(33.25, -3, 0, 0.671)

  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@スコア1
if PED_DATA and PED_DATA.version_status == "ok" then
  -- -- bars
  obj.setoption("drawtarget", "tempbuffer", 532, 24)
  obj.load("image", PED_DATA.path.."/score/bar1.png")
  obj.draw(0, 0, 0, 1)
  obj.setoption("blend", "alpha_sub")
  obj.load("figure", "背景")
  obj.drawpoly(
    532 * (PED_DATA.current.widthP1 - 0.5), -12, 0,
    532, -12, 0,
    532, 12, 0,
    532 * (PED_DATA.current.widthP1 - 0.5), 12, 0
  )
  obj.copybuffer("cache:score_bar", "tmp")

  obj.setoption("drawtarget", "tempbuffer", 99999, 95)
  obj.setoption("blend", 0)
  obj.load("image", PED_DATA.path.."/score/bg.png")
  obj.draw(0, 0, 0, 0.9758, 0)

  -- -- 79, 35 / 532, 24
  obj.copybuffer("obj", "cache:score_bar")
  obj.draw(33.25, -3, 0, 0.671)

  obj.load("image", PED_DATA.path.."/score/fg.png")
  obj.draw(0, 0, 0, 1)

  obj.copybuffer("obj", "tmp")
end
----------------------------------------------------------------
@コンボ
--track0:APコンボ,0,1,0,1
if PED_DATA and PED_DATA.version_status == "ok" then
  local ap_alpha = (math.sin(obj.time * math.pi) + 1) * (1 / 2)
  if ap_alpha > 1 then
    ap_alpha = 1
  end
  if PED_DATA.current.combo > 0 then
    obj.setoption("drawtarget", "tempbuffer", obj.screen_w / 2, 200)

    if obj.track0 == 1 then
      obj.load("image", PED_DATA.path.."/combo/pe.png")
      obj.draw(0, -70, 0, 0.67, ap_alpha)
    end
    if obj.track0 == 1 then
      obj.load("image", PED_DATA.path.."/combo/pt.png")
    else
      obj.load("image", PED_DATA.path.."/combo/nt.png")
    end
    obj.draw(0, -67, 0, 0.67)

    local combo_str
    combo_str = tostring(PED_DATA.current.combo)

    local progress = (obj.frame - OFFSET) - (PED_DATA.current.time * obj.framerate)
    for i = 1, #combo_str do
      local digit = combo_str:sub(i, i)
      local shift = -(#combo_str / 2) + i - 0.5
      local shift_fax = 0
      local ap_alpha = (math.sin(obj.time * math.pi) + 1) * (1 / 2)

      if progress > 8 then
        shift_fax = 1
      else
        shift_fax = (progress / 8) * 0.5 + 0.5
      end

      if obj.track0 == 1 then
        obj.load("image", PED_DATA.path.."/combo/b"..digit..".png")
        obj.setoption("blend", 0)
        obj.draw(shift * 72 * shift_fax, 0, 0, 0.70 * shift_fax, ap_alpha)
        obj.load("image", PED_DATA.path.."/combo/p"..digit..".png")
      else
        obj.load("image", PED_DATA.path.."/combo/n"..digit..".png")
      end
      obj.draw(shift * 72 * shift_fax, 0, 0, 0.70 * shift_fax)
    end
    obj.setoption("blend", 1)
    if progress < 14 then
      for i = 1, #combo_str do
        local digit = combo_str:sub(i, i)
        local shift = -(#combo_str / 2) + i - 0.5
        local shift_fax = (progress / 8) * 0.5 + 0.5
        local alpha = (progress / 14) * -1 + 1

        if obj.track0 == 1 then
          obj.load("image", PED_DATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 72 * shift_fax, 0, 0, 0.70 * shift_fax, ap_alpha * alpha)
          obj.load("image", PED_DATA.path.."/combo/p"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
        else
          obj.load("image", PED_DATA.path.."/combo/b"..digit..".png")
          obj.setoption("blend", 0)
          obj.draw(shift * 72 * shift_fax, 0, 0, 0.70 * shift_fax, 0)
          obj.load("image", PED_DATA.path.."/combo/n"..digit..".png")
          if progress > 8 and progress < 11 then
            obj.effect("グロー", "強さ",  progress, "ぼかし", 5)
            obj.effect("ライト", "強さ",  progress * 6.5, "逆光", 1)
          elseif progress >= 11 and progress < 14 then
            obj.effect("グロー", "強さ",  2.5 * (1 - (progress - 13) / 0.5), "ぼかし", 5)
            obj.effect("ライト", "強さ",  15 * (1 - (progress - 13) / 0.5), "逆光", 1)
          end
        end
        obj.draw(shift * 72 * shift_fax, 0, 0, 0.70 * shift_fax, alpha)
      end
    end
    obj.setoption("blend", 0)
    obj.setoption("antialias", 1)
    obj.copybuffer("obj", "tmp")
  end
end
----------------------------------------------------------------
@判定
--track0:判定タイプ,0,5,0,1
if PED_DATA and PED_DATA.version_status == "ok" then
  if PED_DATA.current.time > 0 then
    local progress = ((obj.frame - OFFSET) - (PED_DATA.current.time * obj.framerate))
    local judge = ""
    if obj.track0 == 0 then
      judge = "perfect"
    elseif obj.track0 == 1 then
      judge = "great"
    elseif obj.track0 == 2 then
      judge = "good"
    elseif obj.track0 == 3 then
      judge = "bad"
    elseif obj.track0 == 4 then
      judge = "miss"
    elseif obj.track0 == 5 then
      judge = "auto"
    end
    if progress < 2 then
      obj.load("image", PED_DATA.path.."/judge/v3/"..judge..".png")
      obj.draw(0, 0, 0, 0, 0)
    elseif progress < 5 then
      obj.load("image", PED_DATA.path.."/judge/v3/"..judge..".png")
      obj.draw(0, 0, 0, 0.7 - (-1.45 + (progress / 4)) ^ 4 * 0.7)
    elseif progress < 20 then
      obj.load("image", PED_DATA.path.."/judge/v3/"..judge..".png")
      obj.draw(0, 0, 0, 0.7)
    end
    obj.setoption("antialias", 1)
  end
end
----------------------------------------------------------------
@オート
if PED_DATA and PED_DATA.version_status == "ok" then
  local auto_alpha = math.sin(math.fmod((obj.time - 1.6) / 1.25, 1.2) * math.pi)
  if auto_alpha < 0 then
    auto_alpha = 0
  end
  if obj.time - 1.6 >= 0 then
    obj.load("image", PED_DATA.path.."/autolive.png")
    obj.draw(0, 0, 0, 1, auto_alpha)
  end
  obj.setoption("antialias", 1)
end
-- vim: set ft=lua fenc=cp932:
